{"version":3,"file":"static/js/767.453fd6b6.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","movies-api/Api.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import { useLocation, Link } from \"react-router-dom\";\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n\n","import axios from \"axios\";\n\nconst API_KEY = '9e79bf179828bbd88a056650275888ae';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: '',\n  },\n});\n\nconst fetchTrendingMovies = async () => {\n  const response = await axiosInstance.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axiosInstance.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nconst fetchSearch = async movieName => {\n  const response = await axiosInstance.get(`/search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nconst fetchMovieCast = async movieId => {\n  const response = await axiosInstance.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axiosInstance.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearch,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n    \n    \n// import axios from \"axios\";\n\n// const API_KEY = '9e79bf179828bbd88a056650275888ae';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// const params = {\n//     params: {\n//         api_key: API_KEY,\n//         language: 'en-US',\n//         // include_adult: false,\n//         // query: '',\n//     }\n// };\n\n// // Get the trending movies\n// export const fetchTrendingMovies = async () => {\n//     const response = await axios.get(`trending/movie/day?`, params);\n//     return response.data.results;\n// };\n\n// // Get full movie information\n// export const fetchMovieDetails = async movieId => {\n//     const response = await axios.get(`/movie/${movieId}?`, params);\n//     return response.data;\n// };\n\n// // Search for movies by their original, translated and alternative titles\n// export const fetchSearch = async movieName => {\n//     const response = await axios.get(`/search/movie?query=${movieName}`, params);\n//     return response.data.results;\n// };\n\n\n// // Get the cast information\n// export const fetchMovieCast = async movieId => {\n//     const response = await axios.get(`movie/${movieId}/credits?`, params);\n//     return response.data.cast;\n// };\n\n// // Get the user reviews for a movie\n// export const fetchMovieReviews = async movieId => {\n//     const response = await axios.get(`movie/${movieId}/reviews?`, params);\n//     return response.data.results;\n// };\n\n\n\n\n\n","import React, { useState } from 'react';\n\nexport const SearchForm = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={({ target: { value } }) => setQuery(value)}\n        onBlur={() => setSearchParams({ query })}\n        aria-label=\"Search movies\"\n      />\n      <button type=\"submit\" disabled={!query} aria-label=\"Submit search\">\n        Search\n      </button>\n    </form>\n  );\n};\n\n\n// import { useState } from 'react';\n\n\n// export const SearchForm = ({ setSearchParams }) => {\n//   const [query, setQuery] = useState('');\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n\n//     setSearchParams({ query });\n//   };\n\n//   const handleSearchParams = ({ target: { value } }) => {\n//     setQuery(value);\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Name movie\"\n//         autoFocus\n//         value={query}\n//         onChange={handleSearchParams}\n//       />\n//       <button type=\"submit\" disabled={!query}>\n//         Search\n//       </button>\n//     </form>\n//   );\n// };\n\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearch } from 'movies-api/Api';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nexport const MoviesPages = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // useEffect(() => {\n  //   const currentQuery = searchParams.get('query');\n  //   if (!currentQuery) return;\n\n  //   const fetchMovieByQuery = async () => {\n  //     try {\n  //       const movieByQuery = await fetchSearch(currentQuery);\n  //       setMovies(movieByQuery);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   fetchMovieByQuery();\n  // }, [searchParams]);\n\n  useEffect(() => {\n  const fetchMovieByQuery = async () => {\n    try {\n      const currentQuery = searchParams.get('query');\n      if (!currentQuery) return;\n\n      const movieByQuery = await fetchSearch(currentQuery);\n      setMovies(movieByQuery);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  fetchMovieByQuery();\n}, [searchParams]);\n\n\n  return (\n    <>\n      <SearchForm setSearchParams={setSearchParams} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\n\n"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","Link","state","from","to","concat","axiosInstance","axios","baseURL","params","api_key","language","include_adult","query","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","fetchMovieDetails","_callee2","movieId","_context2","_x","fetchSearch","_ref3","_callee3","movieName","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","SearchForm","setSearchParams","_useState","useState","_useState2","_slicedToArray","setQuery","_jsxs","onSubmit","event","preventDefault","type","placeholder","autoFocus","value","onChange","target","onBlur","disabled","MoviesPages","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","useEffect","fetchMovieByQuery","currentQuery","movieByQuery","t0","console","error","_Fragment","length"],"sourceRoot":""}
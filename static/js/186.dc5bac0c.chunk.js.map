{"version":3,"file":"static/js/186.dc5bac0c.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.jsx","movies-api/Api.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { fetchMovieReviews } from 'movies-api/Api';\n// import Loader from './Loader';\n\n// export const Reviews = () => {\n//   const { movieId } = useParams();\n//   const [reviews, setReviews] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const fetchReviews = async () => {\n//       try {\n//         const response = await fetchMovieReviews(movieId);\n//         setReviews(response);\n//       } catch (error) {\n//         setError(error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchReviews();\n//   }, [movieId]);\n\n//   if (loading) {\n//     return <Loader />;\n//   }\n\n//   if (error) {\n//     return <div>Error fetching reviews: {error.message || error.toString()}</div>\n// ;\n//   }\n\n//   return (\n//     <>\n//       {reviews.length !== 0 ? (\n//         <div>\n//           <h2>Movie reviews</h2>\n//           <ul>\n//             {reviews.map((review) => (\n//               <li key={review.id}>\n//                 <p>{review.author}</p>\n//                 <p>{review.content}</p>\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       ) : (\n//         <div>There are no reviews for this movie yet</div>\n//       )}\n//     </>\n//   );\n// };\n\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'movies-api/Api';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await fetchMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 && (\n        <div>\n          <h2>Movie reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>There are no reviews for this movie yet</div>\n      )}\n    </>\n  );\n};\n\n","import axios from \"axios\";\n\nconst API_KEY = '9e79bf179828bbd88a056650275888ae';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: '',\n  },\n});\n\nconst fetchTrendingMovies = async () => {\n  const response = await axiosInstance.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axiosInstance.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nconst fetchSearch = async movieName => {\n  const response = await axiosInstance.get(`/search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nconst fetchMovieCast = async movieId => {\n  const response = await axiosInstance.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axiosInstance.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearch,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n    \n    \n// import axios from \"axios\";\n\n// const API_KEY = '9e79bf179828bbd88a056650275888ae';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// const params = {\n//     params: {\n//         api_key: API_KEY,\n//         language: 'en-US',\n//         // include_adult: false,\n//         // query: '',\n//     }\n// };\n\n// // Get the trending movies\n// export const fetchTrendingMovies = async () => {\n//     const response = await axios.get(`trending/movie/day?`, params);\n//     return response.data.results;\n// };\n\n// // Get full movie information\n// export const fetchMovieDetails = async movieId => {\n//     const response = await axios.get(`/movie/${movieId}?`, params);\n//     return response.data;\n// };\n\n// // Search for movies by their original, translated and alternative titles\n// export const fetchSearch = async movieName => {\n//     const response = await axios.get(`/search/movie?query=${movieName}`, params);\n//     return response.data.results;\n// };\n\n\n// // Get the cast information\n// export const fetchMovieCast = async movieId => {\n//     const response = await axios.get(`movie/${movieId}/credits?`, params);\n//     return response.data.cast;\n// };\n\n// // Get the user reviews for a movie\n// export const fetchMovieReviews = async movieId => {\n//     const response = await axios.get(`movie/${movieId}/reviews?`, params);\n//     return response.data.results;\n// };\n\n\n\n\n\n"],"names":["Reviews","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","movieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchMovieReviews","sent","t0","console","error","stop","apply","arguments","_jsxs","_Fragment","children","length","_jsx","map","review","author","content","id","axiosInstance","axios","baseURL","params","api_key","language","include_adult","query","fetchTrendingMovies","get","abrupt","data","results","fetchMovieDetails","_ref2","_callee2","_context2","concat","_x","fetchSearch","_ref3","_callee3","movieName","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}
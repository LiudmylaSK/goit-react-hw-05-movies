{"version":3,"file":"static/js/247.fcadfb4b.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","movies-api/Api.jsx","movies-api/constant-images.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { fetchMovieCast } from \"movies-api/Api\";\n// import { BASE_POSTER_URL } from 'services/constants';\n// import placeholder from '../images/placeholder.png';\n\n// export const Cast = () => {\n//   const { movieId } = useParams();\n\n//   const [cast, setCast] = useState([]);\n\n//   useEffect(() => {\n//     const fetchCast = async () => {\n//       try {\n//         const castData = await fetchMovieCast(movieId);\n//         setCast(castData);\n//       } catch (error) {\n//         console.error(error);\n//       }\n//     };\n\n//     if (movieId) {\n//       fetchCast();\n//     }\n//   }, [movieId]);\n\n//   return (\n//     <>\n//       {cast.length > 0 && (\n//         <ul>\n//           {cast.map(({ id, profile_path, original_name, character }) => (\n//             <li key={id}>\n//               <img\n//                 src={`${profile_path ? BASE_POSTER_URL + profile_path : placeholder}`}\n//                 alt={original_name}\n//               />\n//               <p>\n//                 <span> Actor:</span> {original_name}\n//               </p>\n//               <p>\n//                 <span>Character:</span> {character}\n//               </p>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </>\n//   );\n// };\n\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieCast } from \"movies-api/Api\";\nimport { BASE_POSTER_URL } from \"movies-api/constant-images\";\nimport { PLACEHOLDER } from \"movies-api/constant-images\"; \n\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const cast = await fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {\n    \n          <ul>\n            {cast.map(({ id, profile_path, original_name, character }) => (\n              <li key={id}>\n                <img\n                  src={`${\n                    profile_path\n                      ? BASE_POSTER_URL + profile_path\n                      : `${PLACEHOLDER}`\n                  }`}\n                  alt={original_name}\n                />\n                <p>\n                  <span> Actor:</span> {original_name}\n                </p>\n                <p>\n                  <span>Character:</span> {character}\n                </p>\n              </li>\n            ))}\n          </ul>\n       \n      }\n    </>\n  );\n};\n\n\n","import axios from \"axios\";\n\nconst API_KEY = '9e79bf179828bbd88a056650275888ae';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: '',\n  },\n});\n\nconst fetchTrendingMovies = async () => {\n  const response = await axiosInstance.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axiosInstance.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nconst fetchSearch = async movieName => {\n  const response = await axiosInstance.get(`/search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nconst fetchMovieCast = async movieId => {\n  const response = await axiosInstance.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axiosInstance.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearch,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n    \n    \n// import axios from \"axios\";\n\n// const API_KEY = '9e79bf179828bbd88a056650275888ae';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// const params = {\n//     params: {\n//         api_key: API_KEY,\n//         language: 'en-US',\n//         // include_adult: false,\n//         // query: '',\n//     }\n// };\n\n// // Get the trending movies\n// export const fetchTrendingMovies = async () => {\n//     const response = await axios.get(`trending/movie/day?`, params);\n//     return response.data.results;\n// };\n\n// // Get full movie information\n// export const fetchMovieDetails = async movieId => {\n//     const response = await axios.get(`/movie/${movieId}?`, params);\n//     return response.data;\n// };\n\n// // Search for movies by their original, translated and alternative titles\n// export const fetchSearch = async movieName => {\n//     const response = await axios.get(`/search/movie?query=${movieName}`, params);\n//     return response.data.results;\n// };\n\n\n// // Get the cast information\n// export const fetchMovieCast = async movieId => {\n//     const response = await axios.get(`movie/${movieId}/credits?`, params);\n//     return response.data.cast;\n// };\n\n// // Get the user reviews for a movie\n// export const fetchMovieReviews = async movieId => {\n//     const response = await axios.get(`movie/${movieId}/reviews?`, params);\n//     return response.data.results;\n// };\n\n\n\n\n\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w450/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/180x270';\n"],"names":["Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_cast","_context","prev","next","fetchMovieCast","sent","t0","console","log","stop","apply","arguments","_jsx","_Fragment","children","map","_ref2","id","profile_path","original_name","character","_jsxs","src","concat","BASE_POSTER_URL","PLACEHOLDER","alt","axiosInstance","axios","baseURL","params","api_key","language","include_adult","query","fetchTrendingMovies","response","get","abrupt","data","results","fetchMovieDetails","_callee2","_context2","_x","fetchSearch","_ref3","_callee3","movieName","_context3","_x2","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}
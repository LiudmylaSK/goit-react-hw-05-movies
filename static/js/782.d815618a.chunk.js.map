{"version":3,"file":"static/js/782.d815618a.chunk.js","mappings":"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","sources":["movies-api/Api.jsx","movies-api/constant-images.js","components/Button/Button.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '9e79bf179828bbd88a056650275888ae';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: '',\n  },\n});\n\nconst fetchTrendingMovies = async () => {\n  const response = await axiosInstance.get(`trending/movie/day`);\n  return response.data.results;\n};\n\nconst fetchMovieDetails = async movieId => {\n  const response = await axiosInstance.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nconst fetchSearch = async movieName => {\n  const response = await axiosInstance.get(`/search/movie?query=${movieName}`);\n  return response.data.results;\n};\n\nconst fetchMovieCast = async movieId => {\n  const response = await axiosInstance.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n};\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axiosInstance.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieDetails,\n  fetchSearch,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n    \n    \n// import axios from \"axios\";\n\n// const API_KEY = '9e79bf179828bbd88a056650275888ae';\n\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// const params = {\n//     params: {\n//         api_key: API_KEY,\n//         language: 'en-US',\n//         // include_adult: false,\n//         // query: '',\n//     }\n// };\n\n// // Get the trending movies\n// export const fetchTrendingMovies = async () => {\n//     const response = await axios.get(`trending/movie/day?`, params);\n//     return response.data.results;\n// };\n\n// // Get full movie information\n// export const fetchMovieDetails = async movieId => {\n//     const response = await axios.get(`/movie/${movieId}?`, params);\n//     return response.data;\n// };\n\n// // Search for movies by their original, translated and alternative titles\n// export const fetchSearch = async movieName => {\n//     const response = await axios.get(`/search/movie?query=${movieName}`, params);\n//     return response.data.results;\n// };\n\n\n// // Get the cast information\n// export const fetchMovieCast = async movieId => {\n//     const response = await axios.get(`movie/${movieId}/credits?`, params);\n//     return response.data.cast;\n// };\n\n// // Get the user reviews for a movie\n// export const fetchMovieReviews = async movieId => {\n//     const response = await axios.get(`movie/${movieId}/reviews?`, params);\n//     return response.data.results;\n// };\n\n\n\n\n\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w450/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/180x270';\n","import styled from \"styled-components\";\n\nconst Btn = styled.button`\n \n  padding: 10px 15px;\n  font-size: 16px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  \n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);\n  }\n`;\n\nexport const Button = ({ text }) => {\n  return <Btn type=\"button\">{text}</Btn>;\n};\n\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\n\nimport { fetchMovieDetails } from 'movies-api/Api';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport { PLACEHOLDER } from 'movies-api/constant-images';\n\n\n const MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backButton = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const movieDetails = async () => {\n      try {\n        const movie = await fetchMovieDetails(movieId);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <Loader />;\n  }\n\n  \n\n  const roundedPopularity = Math.round(movieDetails.vote_average * 10);\n\n  return (\n    <main>\n      <Link to={backButton.current}>\n        <Button text=\"Go back\" />\n      </Link>\n     \n        <div>\n          <h1>{movieDetails.title}</h1>\n          <h4>User score: {roundedPopularity}%</h4>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {movieDetails.genres.map(genre => (\n              <span key={genre.id}> {genre.name}</span>\n            ))}\n          </p>\n        \n        </div>\n        <div>\n          <img\n            src={\n              movieDetails.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                : `${PLACEHOLDER}`\n            }\n            alt={movieDetails.title}\n          />\n        </div>\n     \n    \n      <h3>Additional information</h3>\n      <Link to=\"cast\">\n        <Button text=\"Cast\" />\n      </Link>\n      <Link to=\"reviews\">\n        <Button text=\"Reviews\" />\n      </Link>\n      \n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;"],"names":["axiosInstance","axios","baseURL","params","api_key","language","include_adult","query","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","results","stop","apply","arguments","fetchMovieDetails","_ref2","_callee2","movieId","_context2","concat","_x","fetchSearch","_ref3","_callee3","movieName","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","BASE_POSTER_URL","PLACEHOLDER","Btn","styled","_templateObject","_taggedTemplateLiteral","Button","text","_jsx","type","children","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","location","useLocation","backButton","useRef","state","from","useEffect","movie","t0","console","error","Loader","roundedPopularity","Math","round","vote_average","_jsxs","Link","to","current","title","overview","genres","map","genre","name","id","src","poster_path","alt","Suspense","fallback","Outlet"],"sourceRoot":""}